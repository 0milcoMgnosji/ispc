compiling nvptx64 
 ret_t: /*safe*/ uniform int32
 ret_t: /*safe*/ uniform int32
 ret_t: /*safe*/ uniform int32
argVals= 0
calleArgCount= 0
 ret_t: /*safe*/ uniform int32
 ret_t: /*safe*/ uniform int32
 ret_t: /*safe*/ uniform int32
argVals= 0
calleArgCount= 0
 ret_t: /*safe*/ uniform int32
 ret_t: /*safe*/ uniform int32
 ret_t: /*safe*/ uniform int32
argVals= 0
calleArgCount= 0
 ret_t: /*safe*/ uniform int32
 ret_t: /*safe*/ uniform int32
 ret_t: /*safe*/ uniform int32
argVals= 0
calleArgCount= 0
 ret_t: /*safe*/ uniform int32
 ret_t: /*safe*/ uniform int32
 ret_t: /*safe*/ uniform int32
argVals= 0
calleArgCount= 0
 ret_t: /*safe*/ uniform int32
 ret_t: /*safe*/ uniform int32
 ret_t: /*safe*/ uniform int32
argVals= 0
calleArgCount= 0
 ret_t: /*safe*/ uniform int32
 ret_t: /*safe*/ uniform int32
 ret_t: /*safe*/ uniform int32
argVals= 0
calleArgCount= 0
 ret_t: /*safe*/ varying int32
 ret_t: /*safe*/ varying int32
 ret_t: /*safe*/ varying int32
argVals= 0
calleArgCount= 0
argVals= 0
calleArgCount= 1
argVals= 3
calleArgCount= 3
 ret_t: /*safe*/ varying float
 ret_t: /*safe*/ varying float
 ret_t: /*safe*/ varying float
argVals= 1
calleArgCount= 1
argVals= 3
calleArgCount= 3
 ret_t: /*safe*/ uniform float
 ret_t: /*safe*/ uniform float
 ret_t: /*safe*/ uniform float
argVals= 1
calleArgCount= 1
 ret_t: /*safe*/ varying float
 ret_t: /*safe*/ varying float
 ret_t: /*safe*/ varying float
argVals= 1
calleArgCount= 1
argVals= 3
calleArgCount= 3
 ret_t: /*safe*/ uniform float
 ret_t: /*safe*/ uniform float
 ret_t: /*safe*/ uniform float
argVals= 1
calleArgCount= 1
 ret_t: /*safe*/ varying double
 ret_t: /*safe*/ varying double
 ret_t: /*safe*/ varying double
argVals= 1
calleArgCount= 1
argVals= 3
calleArgCount= 3
 ret_t: /*safe*/ uniform double
 ret_t: /*safe*/ uniform double
 ret_t: /*safe*/ uniform double
argVals= 1
calleArgCount= 1
 ret_t: /*safe*/ varying unsigned int32
 ret_t: /*safe*/ varying unsigned int32
 ret_t: /*safe*/ varying unsigned int32
argVals= 1
calleArgCount= 1
argVals= 3
calleArgCount= 3
 ret_t: /*safe*/ uniform unsigned int32
 ret_t: /*safe*/ uniform unsigned int32
 ret_t: /*safe*/ uniform unsigned int32
argVals= 1
calleArgCount= 1
 ret_t: /*safe*/ varying unsigned int64
 ret_t: /*safe*/ varying unsigned int64
 ret_t: /*safe*/ varying unsigned int64
argVals= 1
calleArgCount= 1
argVals= 3
calleArgCount= 3
 ret_t: /*safe*/ uniform unsigned int64
 ret_t: /*safe*/ uniform unsigned int64
 ret_t: /*safe*/ uniform unsigned int64
argVals= 1
calleArgCount= 1
 ret_t: /*safe*/ varying float
 ret_t: /*safe*/ varying float
 ret_t: /*safe*/ varying float
argVals= 2
calleArgCount= 2
argVals= 3
calleArgCount= 3
 ret_t: /*safe*/ varying int8
 ret_t: /*safe*/ varying int8
 ret_t: /*safe*/ varying int8
argVals= 2
calleArgCount= 2
argVals= 3
calleArgCount= 3
 ret_t: /*safe*/ varying int16
 ret_t: /*safe*/ varying int16
 ret_t: /*safe*/ varying int16
argVals= 2
calleArgCount= 2
argVals= 3
calleArgCount= 3
 ret_t: /*safe*/ varying int32
 ret_t: /*safe*/ varying int32
 ret_t: /*safe*/ varying int32
argVals= 2
calleArgCount= 2
argVals= 3
calleArgCount= 3
 ret_t: /*safe*/ varying double
 ret_t: /*safe*/ varying double
 ret_t: /*safe*/ varying double
argVals= 2
calleArgCount= 2
argVals= 3
calleArgCount= 3
 ret_t: /*safe*/ varying int64
 ret_t: /*safe*/ varying int64
 ret_t: /*safe*/ varying int64
argVals= 2
calleArgCount= 2
argVals= 3
calleArgCount= 3
 ret_t: /*safe*/ varying float
 ret_t: /*safe*/ varying float
 ret_t: /*safe*/ varying float
argVals= 2
calleArgCount= 2
argVals= 3
calleArgCount= 3
 ret_t: /*safe*/ varying int8
 ret_t: /*safe*/ varying int8
 ret_t: /*safe*/ varying int8
argVals= 2
calleArgCount= 2
argVals= 3
calleArgCount= 3
 ret_t: /*safe*/ varying int16
 ret_t: /*safe*/ varying int16
 ret_t: /*safe*/ varying int16
argVals= 2
calleArgCount= 2
argVals= 3
calleArgCount= 3
 ret_t: /*safe*/ varying int32
 ret_t: /*safe*/ varying int32
 ret_t: /*safe*/ varying int32
argVals= 2
calleArgCount= 2
argVals= 3
calleArgCount= 3
 ret_t: /*safe*/ varying double
 ret_t: /*safe*/ varying double
 ret_t: /*safe*/ varying double
argVals= 2
calleArgCount= 2
argVals= 3
calleArgCount= 3
 ret_t: /*safe*/ varying int64
 ret_t: /*safe*/ varying int64
 ret_t: /*safe*/ varying int64
argVals= 2
calleArgCount= 2
argVals= 3
calleArgCount= 3
 ret_t: /*safe*/ varying float
 ret_t: /*safe*/ varying float
 ret_t: /*safe*/ varying float
argVals= 2
calleArgCount= 2
argVals= 3
calleArgCount= 3
 ret_t: /*safe*/ varying int8
 ret_t: /*safe*/ varying int8
 ret_t: /*safe*/ varying int8
argVals= 2
calleArgCount= 2
argVals= 3
calleArgCount= 3
 ret_t: /*safe*/ varying int16
 ret_t: /*safe*/ varying int16
 ret_t: /*safe*/ varying int16
argVals= 2
calleArgCount= 2
argVals= 3
calleArgCount= 3
 ret_t: /*safe*/ varying int32
 ret_t: /*safe*/ varying int32
 ret_t: /*safe*/ varying int32
argVals= 2
calleArgCount= 2
argVals= 3
calleArgCount= 3
 ret_t: /*safe*/ varying double
 ret_t: /*safe*/ varying double
 ret_t: /*safe*/ varying double
argVals= 2
calleArgCount= 2
argVals= 3
calleArgCount= 3
 ret_t: /*safe*/ varying int64
 ret_t: /*safe*/ varying int64
 ret_t: /*safe*/ varying int64
argVals= 2
calleArgCount= 2
argVals= 3
calleArgCount= 3
 ret_t: /*safe*/ varying float
 ret_t: /*safe*/ varying float
 ret_t: /*safe*/ varying float
argVals= 3
calleArgCount= 3
argVals= 3
calleArgCount= 3
 ret_t: /*safe*/ varying int8
 ret_t: /*safe*/ varying int8
 ret_t: /*safe*/ varying int8
argVals= 3
calleArgCount= 3
argVals= 3
calleArgCount= 3
 ret_t: /*safe*/ varying int16
 ret_t: /*safe*/ varying int16
 ret_t: /*safe*/ varying int16
argVals= 3
calleArgCount= 3
argVals= 3
calleArgCount= 3
 ret_t: /*safe*/ varying int32
 ret_t: /*safe*/ varying int32
 ret_t: /*safe*/ varying int32
argVals= 3
calleArgCount= 3
argVals= 3
calleArgCount= 3
 ret_t: /*safe*/ varying double
 ret_t: /*safe*/ varying double
 ret_t: /*safe*/ varying double
argVals= 3
calleArgCount= 3
argVals= 3
calleArgCount= 3
 ret_t: /*safe*/ varying int64
 ret_t: /*safe*/ varying int64
 ret_t: /*safe*/ varying int64
argVals= 3
calleArgCount= 3
argVals= 3
calleArgCount= 3
 ret_t: /*safe*/ /*cost=1*/ uniform float
 ret_t: /*safe*/ /*cost=1*/ uniform float
 ret_t: /*safe*/ /*cost=1*/ uniform float
argVals= 1
calleArgCount= 2
argVals= 2
calleArgCount= 2
argVals= 1
calleArgCount= 2
 ret_t: /*safe*/ /*cost=1*/ uniform int8
 ret_t: /*safe*/ /*cost=1*/ uniform int8
 ret_t: /*safe*/ /*cost=1*/ uniform int8
argVals= 2
calleArgCount= 2
 ret_t: /*safe*/ /*cost=1*/ uniform unsigned int8
 ret_t: /*safe*/ /*cost=1*/ uniform unsigned int8
 ret_t: /*safe*/ /*cost=1*/ uniform unsigned int8
argVals= 2
calleArgCount= 2
 ret_t: /*safe*/ /*cost=1*/ uniform int16
 ret_t: /*safe*/ /*cost=1*/ uniform int16
 ret_t: /*safe*/ /*cost=1*/ uniform int16
argVals= 2
calleArgCount= 2
 ret_t: /*safe*/ /*cost=1*/ uniform unsigned int16
 ret_t: /*safe*/ /*cost=1*/ uniform unsigned int16
 ret_t: /*safe*/ /*cost=1*/ uniform unsigned int16
argVals= 2
calleArgCount= 2
 ret_t: /*safe*/ /*cost=1*/ uniform int32
 ret_t: /*safe*/ /*cost=1*/ uniform int32
 ret_t: /*safe*/ /*cost=1*/ uniform int32
argVals= 2
calleArgCount= 2
 ret_t: /*safe*/ /*cost=1*/ uniform unsigned int32
 ret_t: /*safe*/ /*cost=1*/ uniform unsigned int32
 ret_t: /*safe*/ /*cost=1*/ uniform unsigned int32
argVals= 2
calleArgCount= 2
 ret_t: /*safe*/ /*cost=1*/ uniform double
 ret_t: /*safe*/ /*cost=1*/ uniform double
 ret_t: /*safe*/ /*cost=1*/ uniform double
argVals= 1
calleArgCount= 2
argVals= 2
calleArgCount= 2
argVals= 1
calleArgCount= 2
 ret_t: /*safe*/ /*cost=1*/ uniform int64
 ret_t: /*safe*/ /*cost=1*/ uniform int64
 ret_t: /*safe*/ /*cost=1*/ uniform int64
argVals= 2
calleArgCount= 2
 ret_t: /*safe*/ /*cost=1*/ uniform unsigned int64
 ret_t: /*safe*/ /*cost=1*/ uniform unsigned int64
 ret_t: /*safe*/ /*cost=1*/ uniform unsigned int64
argVals= 2
calleArgCount= 2
 ret_t: /*safe*/ /*cost=1*/ varying float
 ret_t: /*safe*/ /*cost=1*/ varying float
 ret_t: /*safe*/ /*cost=1*/ varying float
argVals= 1
calleArgCount= 2
argVals= 1
calleArgCount= 2
argVals= 3
calleArgCount= 3
argVals= 1
calleArgCount= 2
argVals= 3
calleArgCount= 3
 ret_t: /*safe*/ /*cost=1*/ varying int8
 ret_t: /*safe*/ /*cost=1*/ varying int8
 ret_t: /*safe*/ /*cost=1*/ varying int8
argVals= 3
calleArgCount= 3
argVals= 3
calleArgCount= 3
 ret_t: /*safe*/ /*cost=1*/ varying unsigned int8
 ret_t: /*safe*/ /*cost=1*/ varying unsigned int8
 ret_t: /*safe*/ /*cost=1*/ varying unsigned int8
argVals= 3
calleArgCount= 3
argVals= 3
calleArgCount= 3
 ret_t: /*safe*/ /*cost=1*/ varying int16
 ret_t: /*safe*/ /*cost=1*/ varying int16
 ret_t: /*safe*/ /*cost=1*/ varying int16
argVals= 3
calleArgCount= 3
argVals= 3
calleArgCount= 3
 ret_t: /*safe*/ /*cost=1*/ varying unsigned int16
 ret_t: /*safe*/ /*cost=1*/ varying unsigned int16
 ret_t: /*safe*/ /*cost=1*/ varying unsigned int16
argVals= 3
calleArgCount= 3
argVals= 3
calleArgCount= 3
 ret_t: /*safe*/ /*cost=1*/ varying int32
 ret_t: /*safe*/ /*cost=1*/ varying int32
 ret_t: /*safe*/ /*cost=1*/ varying int32
argVals= 3
calleArgCount= 3
argVals= 3
calleArgCount= 3
 ret_t: /*safe*/ /*cost=1*/ varying unsigned int32
 ret_t: /*safe*/ /*cost=1*/ varying unsigned int32
 ret_t: /*safe*/ /*cost=1*/ varying unsigned int32
argVals= 3
calleArgCount= 3
argVals= 3
calleArgCount= 3
 ret_t: /*safe*/ /*cost=1*/ varying double
 ret_t: /*safe*/ /*cost=1*/ varying double
 ret_t: /*safe*/ /*cost=1*/ varying double
argVals= 1
calleArgCount= 2
argVals= 1
calleArgCount= 2
argVals= 3
calleArgCount= 3
argVals= 1
calleArgCount= 2
argVals= 3
calleArgCount= 3
 ret_t: /*safe*/ /*cost=1*/ varying int64
 ret_t: /*safe*/ /*cost=1*/ varying int64
 ret_t: /*safe*/ /*cost=1*/ varying int64
argVals= 3
calleArgCount= 3
argVals= 3
calleArgCount= 3
 ret_t: /*safe*/ /*cost=1*/ varying unsigned int64
 ret_t: /*safe*/ /*cost=1*/ varying unsigned int64
 ret_t: /*safe*/ /*cost=1*/ varying unsigned int64
argVals= 3
calleArgCount= 3
argVals= 3
calleArgCount= 3
 ret_t: /*safe*/ /*cost=1*/ uniform int32
 ret_t: /*safe*/ /*cost=1*/ uniform int32
 ret_t: /*safe*/ /*cost=1*/ uniform int32
argVals= 1
calleArgCount= 1
 ret_t: /*safe*/ /*cost=1*/ varying int32
 ret_t: /*safe*/ /*cost=1*/ varying int32
 ret_t: /*safe*/ /*cost=1*/ varying int32
argVals= 1
calleArgCount= 1
argVals= 3
calleArgCount= 3
 ret_t: /*safe*/ uniform bool
 ret_t: /*safe*/ uniform bool
 ret_t: /*safe*/ uniform bool
argVals= 1
calleArgCount= 1
 ret_t: /*safe*/ uniform bool
 ret_t: /*safe*/ uniform bool
 ret_t: /*safe*/ uniform bool
argVals= 1
calleArgCount= 1
 ret_t: /*safe*/ uniform bool
 ret_t: /*safe*/ uniform bool
 ret_t: /*safe*/ uniform bool
argVals= 1
calleArgCount= 1
 ret_t: /*safe*/ uniform int32
 ret_t: /*safe*/ uniform int32
 ret_t: /*safe*/ uniform int32
argVals= 1
calleArgCount= 1
 ret_t: /*safe*/ uniform int32
 ret_t: /*safe*/ uniform int32
 ret_t: /*safe*/ uniform int32
argVals= 1
calleArgCount= 1
 ret_t: /*safe*/ varying int32
argVals= 2
calleArgCount= 3
argVals= 1
calleArgCount= 2
argVals= 3
calleArgCount= 4
 ret_t: /*safe*/ varying int32
 ret_t: /*safe*/ varying int32
argVals= 3
calleArgCount= 3
argVals= 3
calleArgCount= 3
 ret_t: /*safe*/ varying int32
argVals= 2
calleArgCount= 3
argVals= 1
calleArgCount= 2
argVals= 3
calleArgCount= 4
 ret_t: /*safe*/ varying int32
 ret_t: /*safe*/ varying int32
argVals= 3
calleArgCount= 3
argVals= 3
calleArgCount= 3
 ret_t: /*safe*/ uniform int32
 ret_t: /*safe*/ uniform int32
 ret_t: /*safe*/ uniform int32
argVals= 1
calleArgCount= 1
argVals= 1
calleArgCount= 1
 ret_t: /*safe*/ uniform unsigned int64
 ret_t: /*safe*/ uniform unsigned int64
 ret_t: /*safe*/ uniform unsigned int64
argVals= 1
calleArgCount= 1
 ret_t: void
argVals= 3
calleArgCount= 3
 ret_t: void
 ret_t: void
argVals= 3
calleArgCount= 3
 ret_t: void
 ret_t: void
argVals= 3
calleArgCount= 3
argVals= 3
calleArgCount= 3
argVals= 1
calleArgCount= 1
argVals= 1
calleArgCount= 1
argVals= 0
calleArgCount= 0
stdlib.ispc:493:5: Error: Assertion failed (ctx.cpp:1755): "v0->getType() == 
        v1->getType()". 
***
*** Please file a bug report at https://github.com/ispc/ispc/issues
*** (Including as much information as you can about how to reproduce this error).
*** You have apparently encountered a bug in the compiler that we'd like to fix!
***
main.cpp(223): FATAL ERROR: Unhandled signal sent to process; terminating.
